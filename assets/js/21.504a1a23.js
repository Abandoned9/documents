(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{604:function(t,s,a){"use strict";a.r(s);var n=a(6),o=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nosql和关系型数据库的区别-以及非关系型数据库mongodb入门和注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql和关系型数据库的区别-以及非关系型数据库mongodb入门和注意事项"}},[t._v("#")]),t._v(" NoSQL和关系型数据库的区别，以及非关系型数据库MongoDB入门和注意事项")]),t._v(" "),a("h2",{attrs:{id:"nosql介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql介绍"}},[t._v("#")]),t._v(" NoSQL介绍")]),t._v(" "),a("p",[t._v("NoSQL(non-relational)指非关系型数据库，最主要的代表有Redis，MongoDB， Oracle BDB 。随着互联网web技术的进步，传统的关系型数据库在处理高并发或者纯动态网站已经有点力不从心。而现代计算机系统产生的庞大数据量，而这些数据很大一部分都是由RDBMS(关系数据管理系统)来处理，这让数据建模和应用编程更加简单。")]),t._v(" "),a("h3",{attrs:{id:"关系型数据库acid规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库acid规则"}},[t._v("#")]),t._v(" 关系型数据库ACID规则")]),t._v(" "),a("blockquote",[a("p",[t._v("在这里谈论到的ACID规则属于事务("),a("strong",[t._v("transaction")]),t._v(")的规则")])]),t._v(" "),a("h4",{attrs:{id:"atomicity-原子性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#atomicity-原子性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Atomicity")]),t._v(" 原子性：")]),t._v(" "),a("p",[t._v("原子性意思是说："),a("strong",[t._v("transaction")]),t._v("里面的操作要么全部做完，要么全部 都不做，其中"),a("strong",[t._v("transaction")]),t._v("实际上是一个判断条件，只有在"),a("strong",[t._v("transaction")]),t._v("里面所有操作全部成功之后才会执行。")]),t._v(" "),a("p",[t._v("例如：A银行卡和B银行卡内都有1000元现金，这时A卡向B卡转账500元，这时银行会从A卡扣掉500元，向B卡增加500元，而这两步是同一时间内完成的，只要有一方出现失败，那么转账就不会完成，A卡也不会扣钱，B卡也不会增钱")]),t._v(" "),a("h4",{attrs:{id:"consistency-一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consistency-一致性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Consistency")]),t._v(" 一致性：")]),t._v(" "),a("p",[t._v("一致性的意思是说：所有数据在执行"),a("strong",[t._v("transaction")]),t._v("的前后，必须保持原则上的一致。")]),t._v(" "),a("p",[t._v("例如：A银行卡和B银行卡内都有1000元的现金，那么他们两个账户加起来一共有2000元的现金，A卡向B卡转账指定额数之后，两个账户还是一共只有2000元的现金，不会出现更多。")]),t._v(" "),a("h4",{attrs:{id:"isolation-独立性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isolation-独立性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Isolation")]),t._v(" 独立性：")]),t._v(" "),a("p",[t._v("独立性是指，当多个用户同时操作数据库时，每个用户会创建一个独立的"),a("strong",[t._v("transaction")]),t._v("，它们不会被其他的"),a("strong",[t._v("transaction")]),t._v("干扰，即使有两个"),a("strong",[t._v("transaction")]),t._v("是并发情况下的，它们也相互隔离，直到其中一个"),a("strong",[t._v("transaction")]),t._v("提交完成，才会修改另一个的数据。")]),t._v(" "),a("p",[t._v("例如：A银行卡向B银行卡转账，那么A卡操作的用户必须确认提交，完成A卡用户的"),a("strong",[t._v("transaction")]),t._v("之后，才会修改B银行卡内的现金数额。")]),t._v(" "),a("h4",{attrs:{id:"durability-持久性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#durability-持久性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Durability")]),t._v(" 持久性：")]),t._v(" "),a("p",[t._v("持久性相对简单，它是指"),a("strong",[t._v("transaction")]),t._v("一旦提交完成，就会永久保存数据，不会因为服务器突然停电或者各种意外情况关闭之后导致数据丢失。")]),t._v(" "),a("h3",{attrs:{id:"nosql的用途以及为何使用nosql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql的用途以及为何使用nosql"}},[t._v("#")]),t._v(" NoSQL的用途以及为何使用NoSQL")]),t._v(" "),a("p",[t._v("NoSQL一般用于超大量数据的存储，而这些类型的数据不需要固定的模式也不需要多余的操作就可以横向扩展。")]),t._v(" "),a("p",[t._v("现代的各种互联网应用模式会产生太多不需要长期持久保存数据，例如地理位置，用户操作生成的操作日志等等，如果我们想要对这些数据进行查询，使用关系型数据库会因为数据量过多导致各种问题，而NoSQL的发展就能很好的处理这些格式简单却数据量过大的数据。")]),t._v(" "),a("h3",{attrs:{id:"nosql数据库分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nosql数据库分类"}},[t._v("#")]),t._v(" NoSQL数据库分类")]),t._v(" "),a("blockquote",[a("p",[t._v("NoSQL数据库发展到现在，也衍生了很多不同的版本，我们可以根据应用的需求使用不同的版本，下面的表格总结出了不同版本之间的不同")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",[t._v("代表")]),t._v(" "),a("th",[t._v("特点")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("列存储")]),t._v(" "),a("td",[t._v("Hbase  Cassandra  Hypertable")]),t._v(" "),a("td",[t._v("顾名思义，是按列存储数据的。最大的特点是方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有非常大的IO优势。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("文档存储")]),t._v(" "),a("td",[t._v("MongoDB CouchDB")]),t._v(" "),a("td",[t._v("文档存储一般用类似json的格式存储，存储的内容是文档型的。这样也就有机会对某些字段建立索引，实现关系数据库的某些功能。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("key-value存储")]),t._v(" "),a("td",[t._v("MemcacheDB Redis")]),t._v(" "),a("td",[t._v("可以通过key快速查询到其value。一般来说，存储不管value的格式，照单全收。（Redis包含了其他功能）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("图存储")]),t._v(" "),a("td",[t._v("Neo4j FlockDB")]),t._v(" "),a("td",[t._v("图形关系的最佳存储。使用传统关系数据库来解决的话性能低下，而且设计使用不方便。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("对象存储")]),t._v(" "),a("td",[t._v("db4o   Versant")]),t._v(" "),a("td",[t._v("通过类似面向对象语言的语法操作数据库，通过对象的方式存取数据。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("xml数据库")]),t._v(" "),a("td",[t._v("XML             DB")]),t._v(" "),a("td",[t._v("高效的存储XML数据，并支持XML的内部查询语法，比如XQuery,Xpath。")])])])]),t._v(" "),a("h2",{attrs:{id:"mongodb介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb介绍"}},[t._v("#")]),t._v(" MongoDB介绍")]),t._v(" "),a("blockquote",[a("p",[t._v("MongoDB是一个基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。")]),t._v(" "),a("p",[t._v("MongoDB 将数据存储以键值对(key:value)的形式存储为一个文件，类似JSON格式，其中value的值可以包含其他文件、数组等等，例如：")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tusername"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpassword"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tusergroups"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("h2",{attrs:{id:"mongodb安装教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb安装教程"}},[t._v("#")]),t._v(" MongoDB安装教程")]),t._v(" "),a("h3",{attrs:{id:"windows下安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows下安装"}},[t._v("#")]),t._v(" windows下安装")]),t._v(" "),a("p",[t._v("MongoDB官网提供了Windows下的安装包，我们可以在官网进行下载：https://www.mongodb.com/download-center/community")]),t._v(" "),a("blockquote",[a("p",[t._v("Tips：MongoDB的最新版本已不支持32位系统安装")])]),t._v(" "),a("p",[t._v("选择下面的版本进行安装，我这里用4.2.2做演示：")]),t._v(" "),a("ul",[a("li",[t._v("点Download下载")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dyblog-oss.oss-cn-beijing.aliyuncs.com/blogimgs/mongodb_sec1.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("下载完毕打开安装程序，选择Custom")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dyblog-oss.oss-cn-beijing.aliyuncs.com/blogimgs/mongodb_sec2.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("然后进入下面的页面，不用管，继续点击Next")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dyblog-oss.oss-cn-beijing.aliyuncs.com/blogimgs/mongodb_sec4.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("下面的这个Install MongoDB Compass是一个图形化管理界面，你可以不勾选，以后有需求的时候也能去官网下载安装，这里我图方便一起装了")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://dyblog-oss.oss-cn-beijing.aliyuncs.com/blogimgs/mongodb_sec5.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("下面就是Next或者Install一路到底")])]),t._v(" "),a("h3",{attrs:{id:"linux安装方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux安装方式"}},[t._v("#")]),t._v(" Linux安装方式")]),t._v(" "),a("p",[t._v("同样的官网下载页面，在OS项选择对应的系统")]),t._v(" "),a("p",[t._v("mongoDB更新过后目前的都可以直接安装，Ubuntu安装deb文件")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" dpkg -i package.deb\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装指令")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("添加PATH")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongoDB所在路径/bin:"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("如何设置PATH请自行百度")]),t._v(" "),a("h2",{attrs:{id:"os-x安装方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#os-x安装方式"}},[t._v("#")]),t._v(" OS X安装方式")]),t._v(" "),a("p",[t._v("由于我手上没有OS X系统，所以就不演示了，具体可以百度=。=")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("这就是MongoDB数据库的安装方式，因为辞职以及搬居住地的缘故这篇文章拖了很久，现在都一个月了我才写完，而且上面还有一些我准备说的没写，因为只是一篇安装教程以及简介，所以基本上没有什么难点(当然如果你遇到什么问题可以在下面评论留言，我会尽力及时回复)，后面还有一些安装完之后的基础设置我没讲，打算等到下篇入门配置详细讲讲，感谢大家的阅读，谢谢！")])])}),[],!1,null,null,null);s.default=o.exports}}]);